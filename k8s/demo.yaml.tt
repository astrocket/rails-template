apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: <%= k8s_name %>-demo-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - <%= app_domain %>
      secretName: <%= k8s_name %>-demo-tls
  rules:
    - host: <%= app_domain %>
      http:
        paths:
          - backend:
              serviceName: <%= k8s_name %>-demo-web-svc
              servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: <%= k8s_name %>-demo-web-svc
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: <%= k8s_name %>-demo-web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: <%= k8s_name %>-demo-web
spec:
  selector:
    matchLabels:
      app: <%= k8s_name %>-demo-web
  replicas: 1
  template:
    metadata:
      labels:
        app: <%= k8s_name %>-demo-web
    spec:
      containers:
        - name: app
          image: hashicorp/http-echo
          args:
            - "-listen=:3000"
            - "-text=Hello <%= k8s_name %>"
          ports:
            - containerPort: 3000
        - name: nginx
          image: nginx:1.17-alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /assets
              name: assets
              readOnly: true
            - mountPath: /etc/nginx/nginx.conf
              name: nginx-conf
              subPath: nginx.conf
              readOnly: true
      volumes:
        - name: nginx-conf
          configMap:
            name: <%= k8s_name %>-nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: assets
          emptyDir: {}