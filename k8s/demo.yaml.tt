apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: <%= k8s_name %>-demo-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "20m"
spec:
  tls:
    - hosts:
        - <%= app_domain %>
      secretName: <%= k8s_name %>-demo-tls
  rules:
    - host: <%= app_domain %>
      http:
        paths:
          - backend:
              serviceName: <%= k8s_name %>-demo-web-svc
              servicePort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: <%= k8s_name %>-demo-web-svc
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: <%= k8s_name %>-demo-web
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: <%= k8s_name %>-demo-nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes  auto;

    error_log /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
      worker_connections  16384;
    }

    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /dev/stdout main;
      # access_log off;

      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;

      keepalive_timeout  45;

      gzip  on;
      gzip_static  on;
      gzip_http_version 1.0;
      gzip_comp_level 2;
      gzip_min_length  1000;
      gzip_proxied any;
      gzip_types application/x-javascript text/css text/javascript text/plain text/xml image/x-icon image/png;
      gzip_vary on;
      gzip_disable "MSIE [1-6].(?!.*SV1)";

      client_max_body_size 20m;

      upstream app {
        server localhost:3000 fail_timeout=0;
      }

      server {
        listen 80;

        root /;

        keepalive_timeout 30;
        client_max_body_size 20m;

        location / {
          try_files $uri/index.html $uri/index.htm @app;
        }

        location /nginx_status {
          stub_status on;
          access_log off;
          allow 127.0.0.1;
          deny all;
        }

        location @app {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;
          proxy_http_version 1.1;
          proxy_redirect off;

          proxy_read_timeout 60;
          proxy_send_timeout 60;

          # If you don't find the filename in the static files
          # Then request it from the app server
          if (!-f $request_filename) {
            proxy_pass http://app;
            break;
          }
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: <%= k8s_name %>-demo-web
spec:
  selector:
    matchLabels:
      app: <%= k8s_name %>-demo-web
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: <%= k8s_name %>-demo-web
    spec:
      containers:
        - name: app
          image: hashicorp/http-echo
          args:
            - "-listen=:3000"
            - "-text=Hello <%= k8s_name %>"
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            periodSeconds: 5
            successThreshold: 2
            failureThreshold: 2
            timeoutSeconds: 5
        - name: nginx
          image: nginx:1.17-alpine
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
            periodSeconds: 5
            successThreshold: 2
            failureThreshold: 2
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              name: nginx-conf
              subPath: nginx.conf
              readOnly: true
      volumes:
        - name: nginx-conf
          configMap:
            name: <%= k8s_name %>-demo-nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf